# Enhanced MCP Server Configuration
# Copy this file to .env and fill in your actual values

# Database Configuration
DATABASE_URL=postgresql://mcp_user:mcp_password@localhost:5432/mcp_dev
REDIS_URL=redis://localhost:6379

# Database Connection Details (used by Docker Compose)
POSTGRES_USER=mcp_user
POSTGRES_PASSWORD=mcp_password
POSTGRES_DB=mcp_dev
POSTGRES_PORT=5432
REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password-here  # Uncomment if Redis requires password

# Server Configuration
MCP_HOST=localhost
MCP_PORT=8000

# Feature Flags
ENABLE_DEBUGGING=true
ENABLE_CODE_ANALYSIS=true

# AI API Keys - Replace with your actual keys
# Get your keys from:
# - Gemini: https://makersuite.google.com/app/apikey
# - Grok: https://x.ai/api
# - OpenAI: https://platform.openai.com/api-keys
# - DeepSeek: https://platform.deepseek.com/
GEMINI_API_KEY=your-gemini-api-key-here
GROK_API_KEY=your-grok-api-key-here
OPENAI_API_KEY=your-openai-api-key-here
DEEPSEEK_API_KEY=your-deepseek-api-key-here

# AI Model Configuration
GEMINI_MODEL=gemini-2.0-flash
GROK_MODEL=grok-3
OPENAI_MODEL=gpt-4o
DEEPSEEK_MODEL=deepseek-chat

# Logging
LOG_LEVEL=info

# WebSocket Server (Node.js)
WEBSOCKET_PORT=3000
NODE_ENV=development

# SSE Server Configuration
SSE_PORT=8001

# Session Configuration
SESSION_TIMEOUT=3600  # 1 hour in seconds
MAX_CONTEXT_LENGTH=10000  # Maximum tokens per AI context

# Security
JWT_SECRET=your-secure-jwt-secret-here
ENCRYPTION_KEY=your-32-byte-encryption-key-here